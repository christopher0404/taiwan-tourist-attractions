{"version":3,"sources":["contexts.js","AuthorizationHeader.js","webAPI.js","components/ScenicSpot.js","components/CitySelectList.js","ScenicSpots.js","App.js","index.js"],"names":["CurrentCityContext","createContext","getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","BASE_URL","getScenicSpots","city","a","url","fetch","headers","authorization","res","json","console","error","Spot","styled","li","SpotName","h3","SpotDescription","p","ScenicSpot","name","description","CitySelectList","value","onChange","Title","h1","Nav","nav","Spots","ul","ScenicSpots","history","useHistory","useParams","useContext","currentCity","setCurrentCity","useState","scenicSpots","setScenicSpots","useEffect","then","spots","log","event","target","push","map","spot","Name","Description","DescriptionDetail","ID","Wrapper","div","App","Provider","exact","from","to","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.705b4585.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const CurrentCityContext = createContext('All');\n","import jsSHA from 'jssha';\n\nexport default function getAuthorizationHeader() {\n  const AppID = 'f9cf2d2287ff4dd699af5d3e239e148a';\n  const AppKey = '9OMUYT4YKIsedjuod5EZ5m4Zoeo';\n\n  const GMTString = new Date().toGMTString();\n  const ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update(`x-date: ${GMTString}`);\n  const HMAC = ShaObj.getHMAC('B64');\n  const Authorization = `hmac username=\"${AppID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`;\n\n  return {\n    'Authorization': Authorization,\n    'X-Date': GMTString,\n    'Accept-Encoding': 'gzip'\n  };\n}\n","import getAuthorizationHeader from './AuthorizationHeader';\n\nconst BASE_URL = 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot';\nconst top = 30;\n\nexport const getScenicSpots = async (city) => {\n  try {\n    const url = city ? `${BASE_URL}/${city}` : `${BASE_URL}`;\n    const res = await fetch(`${url}?$format=JSON&$top=${top}`, {\n      headers: {\n        authorization: getAuthorizationHeader()\n      }\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(error);\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spot = styled.li`\n  margin-bottom: 2rem;\n`;\n\nconst SpotName = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.25rem;\n`;\n\nconst SpotDescription = styled.p`\n  font-size: 1rem;\n`;\n\nexport default function ScenicSpot({ name, description }) {\n  return (\n    <Spot>\n      <SpotName>{name}</SpotName>\n      <SpotDescription>{description}</SpotDescription>\n    </Spot>\n  )\n};\n","export default function CitySelectList({ value, onChange }) {\n  return (\n    <select value={value} onChange={onChange}>\n      <option value=\"All\">全部縣市</option>\n      <option value=\"Taipei\">臺北市</option>\n      <option value=\"NewTaipei\">新北市</option>\n      <option value=\"Taoyuan\">桃園市</option>\n      <option value=\"Taichung\">臺中市</option>\n      <option value=\"Tainan\">臺南市</option>\n      <option value=\"Kaohsiung\">高雄市</option>\n      <option value=\"Keelung\">基隆市</option>\n      <option value=\"Hsinchu\">新竹市</option>\n      <option value=\"HsinchuCounty\">新竹縣</option>\n      <option value=\"MiaoliCounty\">苗栗縣</option>\n      <option value=\"ChanghuaCounty\">彰化縣</option>\n      <option value=\"NantouCounty\">南投縣</option>\n      <option value=\"YunlinCounty\">雲林縣</option>\n      <option value=\"ChiayiCounty\">嘉義縣</option>\n      <option value=\"Chiayi\">嘉義市</option>\n      <option value=\"PingtungCounty\">屏東縣</option>\n      <option value=\"YilanCounty\">宜蘭縣</option>\n      <option value=\"HualienCounty\">花蓮縣</option>\n      <option value=\"TaitungCounty\">臺東縣</option>\n      <option value=\"KinmenCounty\">金門縣</option>\n      <option value=\"PenghuCounty\">澎湖縣</option>\n      <option value=\"LienchiangCounty\">連江縣</option>\n    </select>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getScenicSpots } from './webAPI';\nimport { CurrentCityContext } from './contexts';\nimport ScenicSpot from './components/ScenicSpot';\nimport CitySelectList from './components/CitySelectList';\n\nconst Title = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n`;\n\nconst Nav = styled.nav`\n  margin-bottom: 2rem;\n`;\n\nconst Spots = styled.ul``;\n\nfunction ScenicSpots() {\n  const history = useHistory();\n  const { city } = useParams();\n  const { currentCity, setCurrentCity } = useContext(CurrentCityContext);\n  const [scenicSpots, setScenicSpots] = useState([]);\n\n  useEffect(() => {\n    setCurrentCity(city ? city : 'All');\n    getScenicSpots(city).then(spots => setScenicSpots(spots));\n  }, [city, setCurrentCity]);\n\n  const handleCityChange = event => {\n    const value = event.target.value;\n    history.push(`/scenicSpot/${value}`);\n  }\n\n  console.log('cityParam', city);\n  console.log('currentCity', currentCity);\n  console.log('scenicSpots', scenicSpots);\n\n  return (\n    <>\n      <Title>台灣觀光景點</Title>\n      <Nav>\n        <CitySelectList value={city ? city : 'All'} onChange={handleCityChange} />\n      </Nav>\n      <Spots>\n        {scenicSpots.map(spot => (\n          <ScenicSpot\n            key={spot.ID}\n            name={spot.Name}\n            description={spot.Description ? spot.Description : spot.DescriptionDetail}\n          />\n        ))}\n      </Spots>\n    </>\n  );\n}\n\nexport default ScenicSpots;\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { CurrentCityContext } from './contexts';\nimport ScenicSpots from './ScenicSpots';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 40rem;\n  padding: 3rem 1.5rem;\n`;\n\nfunction App() {\n  const [currentCity, setCurrentCity] = useState('All');\n\n  return (\n    <CurrentCityContext.Provider value={{ currentCity, setCurrentCity }}>\n      <Wrapper>\n        <Router>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/scenicSpot\" />\n            <Redirect exact from=\"/scenicSpot/All\" to=\"/scenicSpot\" />\n            <Route exact path=\"/scenicSpot\" component={ScenicSpots} />\n            <Route path=\"/scenicSpot/:city\" component={ScenicSpots} />\n          </Switch>\n        </Router>\n      </Wrapper>\n    </CurrentCityContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}