{"version":3,"sources":["CityContext.js","hooks/useLocalStorage.js","AuthorizationHeader.js","webAPI.js","components/ScenicSpot.js","ScenicSpots.js","components/Navbar.js","App.js","index.js"],"names":["CityContext","createContext","useCity","useContext","CityProvider","children","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","console","log","useLocalStorage","currentCity","setCurrentCity","Provider","getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","BASE_URL","getScenicSpots","city","skip","a","url","fetch","headers","authorization","res","json","Spot","styled","li","SpotName","h3","SpotDescription","p","ScenicSpot","spotRef","name","description","ref","Spots","ul","ScenicSpots","useParams","scenicSpots","setScenicSpots","isLoading","setIsLoading","hasMoreSpots","setHasMoreSpots","hasError","setHasError","setSkip","observer","useRef","lastSpotRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevSkip","observe","useEffect","then","prevSpots","Set","length","catch","map","spot","index","Name","Description","DescriptionDetail","Nav","nav","cities","label","CitySelectList","onChange","Navbar","history","useHistory","event","push","target","Wrapper","div","Title","h1","App","exact","from","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18e463aa.chunk.js","sourcesContent":["import React, { useContext, createContext } from 'react';\nimport useLocalStorage from'./hooks/useLocalStorage';\n\nconst CityContext = createContext();\n\nexport const useCity = () => useContext(CityContext);\n\nexport function CityProvider({ children }) {\n  const [currentCity, setCurrentCity] = useLocalStorage('currentCity');\n\n  return (\n    <CityContext.Provider value={{ currentCity, setCurrentCity }}>\n      {children}\n    </CityContext.Provider>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import jsSHA from 'jssha';\n\nexport default function getAuthorizationHeader() {\n  const AppID = 'f9cf2d2287ff4dd699af5d3e239e148a';\n  const AppKey = '9OMUYT4YKIsedjuod5EZ5m4Zoeo';\n\n  const GMTString = new Date().toGMTString();\n  const ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update(`x-date: ${GMTString}`);\n  const HMAC = ShaObj.getHMAC('B64');\n  const Authorization = `hmac username=\"${AppID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`;\n\n  return {\n    'Authorization': Authorization,\n    'X-Date': GMTString,\n    'Accept-Encoding': 'gzip'\n  };\n}\n","import getAuthorizationHeader from './AuthorizationHeader';\n\nconst BASE_URL = 'https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot';\nconst top = 30;\n\nexport const getScenicSpots = async (city, skip) => {\n  try {\n    const url = city ? `${BASE_URL}/${city}` : `${BASE_URL}`;\n    const res = await fetch(`${url}?$format=JSON&$top=${top}&$skip=${skip}`, {\n      headers: {\n        authorization: getAuthorizationHeader()\n      }\n    });\n    return await res.json();\n  } catch (error) {\n    console.error(error);\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spot = styled.li`\n  margin-bottom: 2rem;\n`;\n\nconst SpotName = styled.h3`\n  margin-bottom: 1rem;\n  font-size: 1.25rem;\n`;\n\nconst SpotDescription = styled.p`\n  font-size: 1rem;\n`;\n\nexport default function ScenicSpot({ spotRef, name, description }) {\n  return (\n    <Spot ref={spotRef}>\n      <SpotName>{name}</SpotName>\n      <SpotDescription>{description}</SpotDescription>\n    </Spot>\n  )\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getScenicSpots } from './webAPI';\nimport { useCity } from './CityContext';\nimport ScenicSpot from './components/ScenicSpot';\n\nconst Spots = styled.ul``;\n\nfunction ScenicSpots() {\n  const { city } = useParams();\n  const { currentCity, setCurrentCity } = useCity();\n\n  const [scenicSpots, setScenicSpots] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasMoreSpots, setHasMoreSpots] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [skip, setSkip] = useState(0);\n\n  const observer = useRef();\n  const lastSpotRef = useCallback(node => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMoreSpots) {\n        setSkip(prevSkip => prevSkip + 30);\n      }\n    });\n\n    if (node) observer.current.observe(node);\n  }, [hasMoreSpots, isLoading]);\n\n  useEffect(() => {\n    setCurrentCity(city);\n    setScenicSpots([]);\n    setSkip(0);\n  }, [city, setCurrentCity]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n\n    getScenicSpots(currentCity, skip).then(res => {\n      setScenicSpots(prevSpots => [...new Set([...prevSpots, ...res])]);\n      setHasMoreSpots(res.length > 0);\n      setIsLoading(false);\n    }).catch(() => {\n      setHasError(true);\n    });\n  }, [currentCity, skip]);\n\n  return (\n    <>\n      <Spots>\n        {scenicSpots.map((spot, index) => {\n          if (scenicSpots.length === index + 1) {\n            return (\n              <ScenicSpot\n                spotRef={lastSpotRef}\n                key={index}\n                name={spot.Name}\n                description={spot.Description ? spot.Description : spot.DescriptionDetail}\n              />\n            )\n          } else {\n            return (\n              <ScenicSpot\n                key={index}\n                name={spot.Name}\n                description={spot.Description ? spot.Description : spot.DescriptionDetail}\n              />\n            )\n          }\n        })}\n      </Spots>\n      <div>{isLoading && 'Loading...'}</div>\n      <div>{hasError && 'Error'}</div>\n    </>\n  );\n}\n\nexport default ScenicSpots;\n","import { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useCity } from '../CityContext';\n\nconst Nav = styled.nav`\n  margin-bottom: 2rem;\n`;\n\nconst cities = [\n  { value: '', label: '全部景點' },\n  { value: 'Taipei', label: '臺北市' },\n  { value: 'NewTaipei', label: '新北市' },\n  { value: 'Taoyuan', label: '桃園市' },\n  { value: 'Taichung', label: '臺中市' },\n  { value: 'Tainan', label: '臺南市' },\n  { value: 'Kaohsiung', label: '高雄市' },\n  { value: 'Keelung', label: '基隆市' },\n  { value: 'Hsinchu', label: '新竹市' },\n  { value: 'HsinchuCounty', label: '新竹縣' },\n  { value: 'MiaoliCounty', label: '苗栗縣' },\n  { value: 'ChanghuaCounty', label: '彰化縣' },\n  { value: 'NantouCounty', label: '南投縣' },\n  { value: 'YunlinCounty', label: '雲林縣' },\n  { value: 'ChiayiCounty', label: '嘉義縣' },\n  { value: 'Chiayi', label: '嘉義市' },\n  { value: 'PingtungCounty', label: '屏東縣' },\n  { value: 'YilanCounty', label: '宜蘭縣' },\n  { value: 'HualienCounty', label: '花蓮縣' },\n  { value: 'TaitungCounty', label: '臺東縣' },\n  { value: 'KinmenCounty', label: '金門縣' },\n  { value: 'PenghuCounty', label: '澎湖縣' },\n  { value: 'LienchiangCounty', label: '連江縣' }\n];\n\nfunction CitySelectList({ value, onChange }) {\n  return (\n    <select value={value} onChange={onChange}>\n      {cities.map((city, index) => (\n        <option key={index} value={city.value}>{city.label}</option>\n      ))}\n    </select>\n  )\n}\n\nexport default function Navbar() {\n  const history = useHistory();\n  const { currentCity } = useCity();\n\n  const handleCityChange = event => {\n    history.push(`/scenicSpot/${event.target.value}`);\n  }\n\n  return (\n    <Nav>\n      <CitySelectList value={currentCity} onChange={handleCityChange} />\n    </Nav>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { CityProvider } from './CityContext';\nimport ScenicSpots from './ScenicSpots';\nimport Navbar from './components/Navbar';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 40rem;\n  padding: 3rem 1.5rem;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n`;\n\nexport default function App() {\n  return (\n    <CityProvider>\n      <Wrapper>\n        <Router>\n          <Title>台灣觀光景點</Title>\n          <Navbar />\n          <Switch>\n            <Redirect exact from='/' to='/scenicSpot' />\n            <Route exact path='/scenicSpot' component={ScenicSpots} />\n            <Route path='/scenicSpot/:city' component={ScenicSpots} />\n          </Switch>\n        </Router>\n      </Wrapper>\n    </CityProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}